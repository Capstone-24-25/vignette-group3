---
title: "Household Classification in California"
author: "Mai Uyen Huynh, Valerie De La Fuente, Rebecca Chang, Tess Ivinjack, Shirley Wang"
date: last-modified
published-title: "Updated"
editor: visual
format: html
code-copy: true
execute:
  message: false
  warning: false
  echo: false
  cache: true
---

## Abstract

This vignette explores how logistic regression and random forest models can classify household density categories (urban, suburban, exurban, rural) using data from the 2010-2012 California Household Travel Survey (CHTS). The dataset includes variables such as household demographics, travel behaviors, vehicle ownership, parking preferences, work schedules, toll lane usage, and active travel modes. By employing Principal Component Analysis (PCA), we reduce the dataset's high dimensionality, distilling numerous variables into a manageable set of key components that retain the most significant variance. Logistic regression, known for its interpretability, is then used to model the relationship between these principal components and household density categories, providing insights into how demographic and travel behavior variables influence classification. In contrast, random forest, an ensemble learning method, is employed to explore complex, non-linear relationships within the data, leveraging decision tree structures to enhance prediction accuracy.

![](imgs/-1x-1.webp)

## Datasets

We are working with 3 datasets: `hh_bgDensity.Rds`, `HHData_111A.Rds`, `PersonData_111A`. `hh_bgDensity.Rds` contains 3 columns and 36,925 observations that include an identification number for each household, numerical value of the density of the surrounding area that the household is in, and the classified household density category (urban, suburban, exurban, rural). `HHData_111A.Rds` contains 17 columns and 36,925 observations which contain categorical and numerical information about each household such as city, county, and household size. `PersonData_111A` contains 17 columns and 36,925 observations that include demographic information on the head-of-household. The 3 datasets have been merged on the household identification number (`hhid`) into a new dataset, `personHHData`, to contain all household information.

## Methodology

While working with a dataset with a large amount of predictors and observations, it is imperative to reduce the dimensionality of the data while retaining it's variability. In order to do so, we are employing principal component analysis on our merged dataset, `personHHData`. With the dataset now reduced, we employ two methods to predict categorical outcomes: a logistic regression model and a random forest model. Finally, we compare the results and see which model performed best.

## Exploratory Data Analysis

```{r}
# Loading necessary packages
library(tidyverse)
library(ggplot2)

# spatial data
require(sf) || install.packages("sf", dependencies = TRUE)
library(sf)

require(mapview) || install.packages("mapview", dependencies = TRUE)
library(mapview)
mapviewOptions(fgb = FALSE)

require(leafsync) || install.packages("leafsync", dependencies = TRUE)
library(leafsync)

require(maps) || install.packages("maps", dependencies = TRUE)
library(maps)
```

```{r}
# combine Person/Household Data
PersonData <- read_rds('../data/PersonData_111A.Rds')
HHData <- read_rds('../data/HHData_111A.Rds')
hh_bgDensity <- read_rds('../data/hh_bgDensity.Rds')

personHHData <- left_join(PersonData, HHData) %>%
  left_join(hh_bgDensity)

county_shp <- st_read("../data/counties/counties.shp")
```

```{r}
# quick plot
plot(county_shp["NAME"])  
```

The unique colors correspond to the unique names of each county.

```{r}
# list variable names
names(personHHData)
```

#### Interactive Map

Taking some of the CHTS person and household characteristics and aggregating them to the county level so we can map the traits of our CHTS respondents county-by-county.

Get the total count of how many people in our survey come from the various counties of California:

```{r}
# aggregating CHTS traits to county level and joining to shapefile
personHHData %>% 
  group_by(CTFIP, County) %>% # added County to this grouping so we can see the county names
  summarise(count=n())
```

We get the county-by-county means of all the variables of interest. Taking the means instead of just getting sums accounts for the fact that there are not equal amounts of people surveyed from each county. We also create a new column `count` to this dataset so we can carry over the counts of how many people were surveyed from each county.

```{r}
prhh_aggreg <- personHHData %>% 
  group_by(County, CTFIP) %>%
  mutate(count = n()) %>% # the new column called 'count'
  summarise_at(vars(-hhid, -pnum, -bg_group), mean)
```

```{r}
# Join datasets on CTFIP (county ID) variable
county_prhh_shp <- county_shp %>% left_join(prhh_aggreg)
```

Newly-created `county_prhh_shp` is also an `sf` object so it has spatial attributes and can be mapped.

#### Map of the percentage of CHTS respondents born in the USA per county

```{r}
mapview(county_prhh_shp, # the dataset to use 
        zcol = "bornUSA", # tells it which column to map
        legend = TRUE, # if FALSE, it won't show the legend 
        label = as.character(county_prhh_shp$NAME), # tells it the column whose value you want to appear when you hover over a shape with your mouse
        popup = leafpop::popupTable(x = county_prhh_shp, zcol = c("count"))  # determines what is included in the popup window when you click on a shape
        )
```

Notice that the percentage of respondents who were born in the USA increases as you look at more northern counties. However, also notice that more urban counties have lower percentages, regardless of their position in the state.

#### Lattice of Interactive Maps

4 maps for each residential location type

```{r}
# group the data we have into 4 parts based on their bg_group
county_bg_aggreg <- personHHData %>% 
  group_by(County, CTFIP, bg_group) %>%  # group by county, CTFIP, and also bg_group
  mutate(count = n()) %>% 
  summarise_at(vars(-hhid, -pnum), mean)

county_bg_shp <- county_shp %>% 
  merge(data.frame(bg_group = c("Urban", "Suburban", "Exurban", "Rural"))) %>% 
  left_join(county_bg_aggreg)
```

```{r}
# Sum Trips by Residential Area
urban_TripMap <-  mapview(filter(county_bg_shp, bg_group == "Urban"),
                          zcol = "Sum_Trips", legend = TRUE, popup = NULL,
                          layer.name = "Urban Trips")

suburb_TripMap <- mapview(filter(county_bg_shp, bg_group == "Suburban"),
                          zcol = "Sum_Trips", legend = TRUE, popup = NULL,
                          layer.name = "Suburban Trips")

exurb_TripMap <- mapview(filter(county_bg_shp, bg_group == "Exurban"),
                         zcol = "Sum_Trips", legend = TRUE, popup = NULL,
                         layer.name = "Exurban Trips")

rural_TripMap <- mapview(filter(county_bg_shp, bg_group == "Rural"),
                         zcol = "Sum_Trips", legend = TRUE, popup = NULL,
                         layer.name = "Rural Trips")
```

```{r}
latticeview(urban_TripMap, suburb_TripMap, exurb_TripMap, rural_TripMap, sync = "all")
```

```{r}
# Sum PMT/Distance by Residential Area
urban_PMTMap <- mapview(filter(county_bg_shp, bg_group == "Urban"),
                        zcol = "Sum_PMT", legend = TRUE, popup = NULL,
                        layer.name = "Urban PMT")

suburb_PMTMap <- mapview(filter(county_bg_shp, bg_group == "Suburban"),
                         zcol = "Sum_PMT", legend = TRUE, popup = NULL,
                         layer.name = "Suburban PMT")

exurb_PMTMap <- mapview(filter(county_bg_shp, bg_group == "Exurban"),
                        zcol = "Sum_PMT", legend = TRUE, popup = NULL,
                        layer.name = "Exurban PMT")

rural_PMTMap <- mapview(filter(county_bg_shp, bg_group == "Rural"),
                        zcol = "Sum_PMT", legend = TRUE, popup = NULL,
                        layer.name = "Rural PMT")
```

```{r}
latticeview(urban_PMTMap, suburb_PMTMap, exurb_PMTMap, rural_PMTMap, sync = "all")
```

#### Static Map

```{r}
county <- ggplot2::map_data("county", region = "california") # get the CA county data

county_bg <- merge(county, data.frame(bg_group = c("Urban", "Suburban", "Exurban", "Rural")))

county_bg_all <- county_bg_aggreg %>% 
  mutate(subregion = tolower(County)) %>% 
  full_join(county_bg, by = c("subregion", "bg_group"))
```

```{r}
ggplot(county_bg_all) +
  geom_polygon(aes(x = long, y = lat, group = subregion, fill = Sum_PMT), colour = "white") +
  scale_fill_distiller(palette = "YlGnBu", direction = 1) +
  facet_wrap(vars(bg_group), nrow = 2) +  # multi-panel plots using facet_wrap(), plot in 2 rows
  ggtitle("Total PMT in California at County-level") + 
  theme_void() +
  theme(legend.position="bottom")
```
